apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: azureopenais.catalog.cluster.local
spec:
  compositeTypeRef:
    apiVersion: catalog.cluster.local/v1
    kind: AzureOpenAIComposite

  writeConnectionSecretsToNamespace: crossplane-system

  mode: Pipeline
  pipeline:
    - step: get-environment-configs
      functionRef:
        name: crossplane-contrib-function-environment-configs
      input:
        apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
        kind: Input
        spec:
          environmentConfigs:
            - type: Reference
              ref:
                name: azure-environment

    - step: azure-openai
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |

            {{ $composite := $.observed.composite.resource }}
            {{ $claim := $composite.spec.claimRef }}

            apiVersion: cognitiveservices.azure.upbound.io/v1beta1
            kind: Account
            metadata:
              name: {{ $claim.name }}
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: account
            {{ if eq $claim nil }}
                crossplane.io/external-name: {}
            {{ else }}
                crossplane.io/external-name: {{ regexReplaceAll "[^a-z0-9]" (printf "%s" $composite.metadata.uid | lower) ""  | trunc 24 }}
            {{ end }}
            spec:
              forProvider:
                resourceGroupName: {{ index $.context "apiextensions.crossplane.io/environment" "resourcegroup" }}
                location: {{ default "Switzerland North" $composite.spec.location }}               # called Region in Azure UI
                kind: OpenAI
                skuName: S0
                tags:
                  source: crossplane
                  claim-name: {{ $claim.name }}
                  claim-kind: {{ $claim.kind }}
                  claim-api-version: {{ $claim.apiVersion }}
                  composite: {{ $composite.metadata.uid }}
              writeConnectionSecretToRef:
                namespace: {{ $claim.namespace }}
                name: {{ $claim.name }}-connection
            
            ---
            apiVersion: network.azure.upbound.io/v1beta1
            kind: PrivateEndpoint
            metadata:
              name: {{ $.observed.composite.resource.spec.claimRef.name }}
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: endpoint
                crossplane.io/external-name: {{ $.observed.composite.resource.spec.claimRef.name }}
            spec:
              forProvider:
                resourceGroupName: {{ index $.context "apiextensions.crossplane.io/environment" "resourcegroup" }}
                subnetId: "/subscriptions/{{ index $.context "apiextensions.crossplane.io/environment" "network-subscription" }}/resourceGroups/{{ index $.context "apiextensions.crossplane.io/environment" "network-resourcegroup" }}/providers/Microsoft.Network/virtualNetworks/{{ index $.context "apiextensions.crossplane.io/environment" "network-name" }}/subnets/default"
                location: {{ default "Switzerland North" $.observed.composite.resource.spec.location }}
                customNetworkInterfaceName: {{ $.observed.composite.resource.spec.claimRef.name }}-nic
                privateServiceConnection:
                  - isManualConnection: false
                    name: {{ $.observed.composite.resource.spec.claimRef.name }}
                    privateConnectionResourceId: {{ $.observed.resources.account.resource.status.atProvider.id }}                    
                privateDnsZoneGroup:
                  - name: default
                    privateDnsZoneIds:
                      - "/subscriptions/{{ index $.context "apiextensions.crossplane.io/environment" "network-subscription" }}/resourceGroups/{{ index $.context "apiextensions.crossplane.io/environment" "network-resourcegroup" }}/providers/Microsoft.Network/privateDnsZones/privatelink.openai.azure.com"
                tags:
                  source: crossplane
                  claim-name: {{ $.observed.composite.resource.spec.claimRef.name }}
                  claim-kind: {{ $.observed.composite.resource.spec.claimRef.kind }}
                  claim-api-version: {{ $.observed.composite.resource.spec.claimRef.apiVersion }}
                  composite: {{ $.observed.composite.resource.metadata.uid }}

            ---
            apiVersion: cognitiveservices.azure.upbound.io/v1beta1
            kind: Deployment
            metadata:
              name: {{ $claim.name }}-gpt-4o
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: deploymentgpt
                crossplane.io/external-name: gpt-4o
            spec:
              forProvider:
                cognitiveAccountId: {{ $.observed.resources.account.resource.status.atProvider.id }}
                model:        
                  - format: OpenAI
                    name: {{ index $composite.spec "model-name" }}
                    {{ if ne (index $composite.spec "model-version") nil }}
                    version: {{ index $composite.spec "model-version" }}
                    {{ end }}
                scale:
                  - type: GlobalStandard
                    capacity: 80

            ---
            apiVersion: cognitiveservices.azure.upbound.io/v1beta1
            kind: Deployment
            metadata:
              name: {{ $claim.name }}-embedding-ada-002
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: deploymentada
                crossplane.io/external-name: embedding-ada-002
            spec:
              forProvider:
                cognitiveAccountId: {{ $.observed.resources.account.resource.status.atProvider.id }}
                model:        
                  - format: OpenAI
                    name: text-embedding-ada-002
                    version: "2"
                scale:
                  - type: Standard
                    capacity: 10

            ---
            apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
            kind: CompositeConnectionDetails
            {{ if eq $.observed.resources nil }}
            data: {}
            {{ else }}
            data:
              password: {{ index $.observed.resources.account.connectionDetails "attribute.primary_access_key" }}
              host: {{ $.observed.resources.account.resource.status.atProvider.endpoint | b64enc }}
            {{ end }}

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready

    - step: enforce-creation-sequence
      functionRef:
        name: crossplane-contrib-function-sequencer
      input:
        apiVersion: sequencer.fn.crossplane.io/v1beta1
        kind: Input
        rules:
          - sequence:
            - "account"
            - "deploymentgpt"
          - sequence:
            - "account"
            - "deploymentada"
